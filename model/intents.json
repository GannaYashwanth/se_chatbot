{
  "intents": [
    {
      "tag": "errors",
      "patterns": [
        "What is this error",
        "errors",
        "can't execute",
        "not running",
        "not successful"
      ],
      "responses": [
        "Can you be more specific",
        "where did you get error",
        "What error did you get?"
      ]
    },
    {
      "tag": "create github",
      "patterns": [
        "How to push into github",
        "How to create github repo from terminal",
        "How to clone a github repo",
        "How to pull from a github repo",
        "How to create a github repo",
        "Why it is saying merged after pushing"
      ],
      "responses": [
        "\ngit init - to initialise a repository\n git add . - to add the changes \n git commit -m 'changes done' - to commit changes\ncgit push - to push the changes in code to the repository"
      ]
    },
    {
      "tag" : "clone github",
      "patterns" : [
        "How to clone github",
        "clone github",
        "How to clone a repo"
      ],
      "responses":[
        "git clone <repolink>"
      ]
    },
    {
      "tag": "segmentation fault or core dumped",
      
      "patterns": [
        "How to resolve error Segmentation fault",
        "Segmentation Fault, Core dumped",
        "Segmentation Fault error",
        "Core dumped error"
      ],
      "responses": [
        "Performing I/O operations on the memory that doesn't belongs to you \n Accessing out of array index bounds \n Dereferencing uninitialized pointer "
      ]
    },
    {
      "tag": "Output limit exceeded",
      "patterns": [
        "It says output limit exceeded",
        "output limit is exceeded"
      ],
      "responses": [
        "Your program has printed too much data to the console."
      ]
    },
    {
      "tag": "Floating point error",
      "patterns": [
        "It says Floating point error",
        "got a floating point error",
        "how to overcome floating point error",
        "what is the reason for floating point error",
        "floating point error",
        "floating error"
      ],
      "responses": [
        "Your program has printed too much data to the console."
      ]
    },
    
    {
      "tag": "Diff btw Git and Github",
      "patterns":[
        "What is difference between github and git?",
        "Diff btw git and github?",
        "Git and github, are they both same?"
      ],
      "responses": [
        "Git is a distributed version control system for tracking changes in source code during software development, where as GitHub is a web-based Git repository hosting service, which offers all of the distributed revision control and source code management (SCM) functionality of Git as well as adding its own features.",
        "Git is a software, where as GitHub is a service.",
        "Git is a command-line tool, where as GitHub is a graphical user interface",
        "Git is focused on version control and code sharing, where as GitHub is focused on centralized source code hosting."
      ]
    },

    {
      "tag": "Commit message",
      "patterns":[
        "How to commit the message?",
        "Commit message?",
        "Commit a new message?"
      ],
      "responses":[
        "A 'git commit' records changes to a repository.",
        "The quickest way to write a git commit is to use the command 'git commit -m'"
      ]
    },

    {
      "tag": "Edit commit message",
      "patterns":[
        "How to edit a commit the message?",
        "Edit a commit message?"
      ],
      "responses":[
        "Its very easy to edit the commmit message, just type 'git commit --amend'.",
        "If you want to set a message directly, just just 'git commit --amend -m new_message'.",
        "If you forget to add a file just add it by typing 'git add forgetten_file \n git commit --amend',and amend the previous commit."
      ]
    },

    {
      "tag": "amend",
      "patterns":[
        "What is amend command used for?",
        "What is amend?"
      ],
      "responses":[
        "commit --amend is used to modify the most recent commit",
        "Command --amend actually will create a new commit which replaces the previous one, so donâ€™t use it for modifying commits which already have been pushed to a central repository."
      ]
    },

    {
      "tag": "merge",
      "patterns":[
        "How to merge a branch into current branch?",
        "Merge into current branch?",
        "How to create a merge commit?",
        "Merge commit?"
      ],
      "responses":[
        "Use 'git checkout <target-branch>' to switch to the branch into which you want to merge.",
        "Use 'git merge --no-ff -m <message> <source-branch>' to merge a branch into the current branch, creating a merge commit with the specified <message>.",
        "Use git merge <source-branch> to merge a branch into the current branch."
      ]
    },

    {
      "tag": "View merged branches",
      "patterns":[
        "What command to use to display all the merged branches",
        "View all the merged branches?",
        "Where to view all the merged branches?"
      ],
      "responses":[
        "Use git branch -a --merged to display a list of all merged local branches."
      ]
    },
    
    {
      "tag": "greeting",
      "patterns": [
        "Hi",
        "Hey",
        "How are you",
        "Is anyone there?",
        "Hello",
        "Good day"
      ],
      "responses": [
        "Hey :-)",
        "Hello, thanks for visiting",
        "Hi there, what can I do for you?",
        "Hi there, how can I help?"
      ]
    },
    {
      "tag": "goodbye",
      "patterns": [
        "Bye",
        "See you later",
        "Goodbye"
      ],
      "responses": [
        "See you later, thanks for visiting",
        "Have a nice day",
        "Bye! Come back again soon."
      ]
    },
    {
      "tag": "thanks",
      "patterns": [
        "Thanks",
        "Thank you",
        "That's helpful",
        "Thank's a lot!"
      ],
      "responses": [
        "Happy to help!",
        "Any time!",
        "My pleasure"
      ]
    },
    {
      "tag": "funny",
      "patterns": [
        "Tell me a joke!",
        "Tell me something funny!",
        "Do you know a joke?"
      ],
      "responses": [
        "Why did the hipster burn his mouth? He drank the coffee before it was cool.",
        "What did the buffalo say when his son left for college? Bison."
      ]
    }
  ]
}
